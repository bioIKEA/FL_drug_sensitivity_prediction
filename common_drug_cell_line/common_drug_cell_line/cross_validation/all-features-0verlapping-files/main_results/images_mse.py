our_method_mse=[]
combined_dataset_mse=[]
selected_best_mse=[]
weighted_average_mse=[]
model_average_mse=[]

ccle_gdsc_our_method_mse=[0.01611450313683322, 0.01722014285383788, 0.0158504652298073, 0.015590094878150707, 0.01595141989276142, 0.016247596474154448, 0.019909749376602025, 0.01505203633737609, 0.01622700916266278, 0.01685823100679735]



ccle_gdsc_combined_dataset_mse=[0.024914191425371747, 0.023140510117438257, 0.024747929214929337, 0.02242213584551539, 0.02485106371226304, 0.02274507726133391, 0.02897883026137858, 0.025708463119569366, 0.023053044580037072, 0.02509283326480446]


ccle_gdsc_selected_best_mse=[0.03647582991630795, 0.03272410118963445, 0.03347518461929496, 0.029244171311894985, 0.032420135446546504, 0.030469521301533097, 0.04201926905951029, 0.03548386562135264, 0.030741629166644878, 0.032106718085360336]



ccle_gdsc_weighted_average_mse=[0.022854663837647553, 0.021375497601479946, 0.022028827762953, 0.020266974371129565, 0.022073371373046127, 0.02014415779351003, 0.026053654749511587, 0.02226875631365293, 0.02103690047085921, 0.02234138314827052]



ccle_gdsc_model_average_mse=[0.02252806765760934, 0.021476813706088192, 0.022162908583529074, 0.02002070153531529, 0.02212598892256674, 0.020389578910825292, 0.025891224901972112, 0.0219352058825539, 0.02134679713517806, 0.02219297476124862]



ccle_gcsi_our_method_mse=[0.020189009462091827, 0.016172554839090213, 0.01739268913330956, 0.015680570047864245, 0.016098993139667155, 0.01664241980096826, 0.019613947440636013, 0.016262537021126646, 0.017617181313562203, 0.015613401809037817]



ccle_gcsi_combined_dataset_mse=[0.04702262326660747, 0.018819639148461416, 0.03579792020914469, 0.023917384581359037, 0.021592006013400975, 0.020327853269939675, 0.026184344821195814, 0.02416542656128086, 0.03729213685231483, 0.01800351060913754]



ccle_gcsi_selected_best_mse=[0.026039249074229324, 0.02101482832174609, 0.022455848132355793, 0.019797464596605224, 0.02484781971143656, 0.020984418341653523, 0.02662463091090267, 0.02659773717185278, 0.021071808988924686, 0.020017131298806116]



ccle_gcsi_weighted_average_mse=[0.020329276164634966, 0.01631940700771646, 0.0191685688260614, 0.015790088668696356, 0.017640893368458196, 0.016775047308356553, 0.0204900889451219, 0.017630085421470643, 0.017776697072806397, 0.015123780172762481]



ccle_gcsi_model_average_mse=[0.01928667786909177, 0.01631427791873159, 0.018204328736642565, 0.015690275620773977, 0.018082390265749624, 0.017123473108448962, 0.019384436556195216, 0.01725489498782842, 0.016878552278446278, 0.01493123375641444]



gdsc_gcsi_our_method_mse=[0.01367407988953268, 0.014729417556875908, 0.00926182003192237, 0.01104433596788723, 0.013945016934150964, 0.010345549574783862, 0.01218347806786905, 0.013153511005143005, 0.01269511059016791, 0.01143933257180961]



gdsc_gcsi_combined_dataset_mse=[0.017406741390865947, 0.01834837571192376, 0.013233509956858812, 0.015693652899495137, 0.01921487129362593, 0.014641663718830054, 0.016604738800896916, 0.01722383774648622, 0.018363668369222264, 0.01587362335549716]


gdsc_gcsi_selected_best_mse=[0.020808451452577807, 0.023503797300675148, 0.017051817380515304, 0.020750259378475362, 0.02395036937254761, 0.020632898810229436, 0.022111822446980445, 0.02154995984721422, 0.023704611806810133, 0.019837807733931144]



gdsc_gcsi_weighted_average_mse=[0.016245801488349604, 0.017946837268988023, 0.012504601053732902, 0.014823186077639511, 0.01869806092964787, 0.013968037142691105, 0.015795629479201583, 0.016754304685502052, 0.017337191102263984, 0.015108860232932658]


gdsc_gcsi_model_average_mse=[0.016346323273564382, 0.01764932623418281, 0.012694608798585187, 0.014822037724464315, 0.01855827983613349, 0.014106931549290287, 0.01601137133527503, 0.01673870119926924, 0.017542976952506978, 0.015301693361063245]



our_method_mse.append(ccle_gdsc_our_method_mse)
our_method_mse.append(ccle_gcsi_our_method_mse)
our_method_mse.append(gdsc_gcsi_our_method_mse)


combined_dataset_mse.append(ccle_gdsc_combined_dataset_mse)
combined_dataset_mse.append(ccle_gcsi_combined_dataset_mse)
combined_dataset_mse.append(gdsc_gcsi_combined_dataset_mse)

selected_best_mse.append(ccle_gdsc_selected_best_mse)
selected_best_mse.append(ccle_gcsi_selected_best_mse)
selected_best_mse.append(gdsc_gcsi_selected_best_mse)


weighted_average_mse.append(ccle_gdsc_weighted_average_mse)
weighted_average_mse.append(ccle_gcsi_weighted_average_mse)
weighted_average_mse.append(gdsc_gcsi_weighted_average_mse)


model_average_mse.append(ccle_gdsc_model_average_mse)
model_average_mse.append(ccle_gcsi_model_average_mse)
model_average_mse.append(gdsc_gcsi_model_average_mse)

methods={
        0:our_method_mse,
        1:combined_dataset_mse, 
        2:selected_best_mse,
        3:weighted_average_mse,
        4:model_average_mse,
        }

names={
        0:"Our Method",
        1:"Combined Dataset", 
        2:"Selecting Best",
        3:"Result Averaging",
        4:"Model Averaging",
        }


# import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

plt.style.use('ggplot')
plt.figure(figsize=(10,10))
plt.suptitle("MSE score comparison between different dataset")
for counter in range(len(methods)):
    ax = plt.subplot(3, 2, counter + 1)
    main=ax.boxplot(methods[counter], patch_artist=True)
    m = np.array(methods[counter]).mean(axis=0)
    st = np.array(methods[counter]).std(axis=0)
    ax.set_title(names[counter])
    for i, line in enumerate(main['medians']):
        x, y = line.get_xydata()[1]
        text = ' μ={:.2f}\n σ={:.2f}'.format(m[i], st[i])
        ax.annotate(text, xy=(x, y))
    ax.set_xticks([1, 2,3])
    ax.set_xticklabels(["CCLE-GDSC","CCLE-gCSI", "GDSC-gCSI"], rotation=10)
    # ax.set_ylim(-20,10)

    colors=["forestgreen", "blue", "dimgray"]
     
    for patch, color in zip(main['boxes'],colors):
        patch.set_facecolor(color)
plt.tight_layout()
plt.autoscale()
plt.savefig('Mse.png',bbox_inches="tight")
plt.show()

