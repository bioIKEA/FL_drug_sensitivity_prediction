our_method_r2=[[0.5364876459852583, 0.46721960864993795, 0.5068726561712491, 0.4543505211465195, 0.5025805284419527, 0.46881976084488686, 0.49613226238773045, 0.553002778807119, 0.4749450786564139, 0.47752946417129993], [0.5406999278314946, 0.4710767451467145, 0.5097790839945311, 0.45788698790812854, 0.5068355622348042, 0.4722696047247653, 0.49954424978545764, 0.5553215959177038, 0.47725082326738966, 0.48444455600102443], [0.5528814971247875, 0.4759887467214262, 0.5180400313257552, 0.45838270163523465, 0.5038872456365162, 0.4913225508612844, 0.5004341917944547, 0.5664690323975281, 0.47949620841805873, 0.4861681510046765], [0.5568766614327431, 0.4754828691391073, 0.5263081744263712, 0.4613424575862649, 0.4978609774813806, 0.4874623716629026, 0.49785393868546124, 0.5681532380109957, 0.4871915988457689, 0.4851158429428304], [0.5568359021584981, 0.4754365520164532, 0.5263144649634057, 0.46130495562665774, 0.4977826204493866, 0.48747087944158274, 0.49779139770029124, 0.56815302784292, 0.4871988230643368, 0.4850427298744966]]



combined_dataset_r2=[[0.3752725521410316, 0.35517688052431506, 0.32830195085105274, 0.31071855887301547, 0.3219225760559117, 0.34139373111456284, 0.3497563417435672, 0.3622779291857575, 0.3399625820933674, 0.3345739342534203], [0.3752130908623489, 0.3595350681003979, 0.32758700142742314, 0.3114454602864746, 0.31461256964876605, 0.3398997560679762, 0.34375252213140994, 0.35782081834969504, 0.33077826413311795, 0.336766507229596], [0.3695854279980928, 0.3488766069631847, 0.3179464185640227, 0.30818284975999755, 0.3005043653774194, 0.35486130431642005, 0.34281282950367087, 0.34921673388116115, 0.32357956497293383, 0.32942959736060906], [0.3191760794693903, 0.3017329676226791, 0.28859516887706027, 0.2639485417194244, 0.24560446646320733, 0.3199105643210447, 0.30125861391207687, 0.3102025104190367, 0.29066395995265437, 0.2812239899404846], [0.31483614029410767, 0.2950891361161836, 0.26041690756328284, 0.22523284440217672, 0.21758463005028716, 0.28250837197189804, 0.2690305856410894, 0.2624172764298971, 0.2714844569266659, 0.23350576270143486]]


selected_best_r2=[[0.0006860937286948809, 0.01963767273754702, -0.004424608662056073, 0.021860923925817954, 0.013675033496484246, 0.033713812745214566, -0.03847387260076229, -0.016963695180838068, 0.04783989792585064, 0.030345078313433915], [0.0011719593976374787, 0.027098533217453702, -0.0029717109469844516, 0.017027146860345677, 0.0037730196620801015, 0.02536988310325916, -0.057954974922763025, -0.01352394710625937, 0.042285305480678326, 0.026461373263651056], [-0.00907717256319418, -0.0015199927177897976, -0.006200036152513633, -0.018762765769658518, -0.026428659819068168, 0.030129656376545855, -0.0413524609213991, -0.029178445661531605, 0.02753312129712404, -0.00546474042815337], [-0.016719106537423256, -0.041995661266963635, -0.024771354279596425, -0.03601417117606531, -0.042841887742989915, 0.026196572370786098, -0.07201447355969592, -0.031279874851553036, 0.015567855317999868, 0.0014538418715071], [-0.0031198678992203632, 0.003151861288278268, -0.00039402673314214987, -0.01049354001042313, -0.020721388948394814, 0.038841407628975144, -0.05990477252482451, -0.01804165134510094, 0.028512065313463952, 0.019257246430034236]]



weighted_average_r2=[[0.38320100820118186, 0.3654503217459233, 0.33233378795047064, 0.3175267841263809, 0.32375383492487075, 0.3470893409516459, 0.3513702336970618, 0.3639247603287261, 0.34070690960583316, 0.33701647362337983], [0.38164343037632464, 0.36606286282933675, 0.334519749920122, 0.3182799040069134, 0.3236458105948219, 0.3521832678059943, 0.3538890566711119, 0.3598951397561315, 0.33654797308145357, 0.34127432420030446], [0.3843592260370692, 0.36169313077586795, 0.3388593807798306, 0.3121502660311607, 0.3151073794892585, 0.3716670368952153, 0.3493684606080534, 0.36219829824511685, 0.33789455743722774, 0.3326099750448601], [0.3715993518606363, 0.34899291529318754, 0.3417211170136034, 0.2998110539482933, 0.3051241079267, 0.36456220073400925, 0.3429108396267372, 0.3611775342145749, 0.3352555067082523, 0.3176898213223909], [0.3714750994753737, 0.34885530164476264, 0.34167629064284344, 0.2997015897914733, 0.3050379964074993, 0.364554166844239, 0.34281595970624534, 0.36110339011902204, 0.33519805083016374, 0.31755249573798805]]


model_average_r2=[[0.3762035167163028, 0.36025202081793173, 0.32775117997690273, 0.3118351672599574, 0.32226468060656255, 0.3461886760840214, 0.3495615222361158, 0.36637995157367287, 0.3417646462466156, 0.33544976712688557], [0.376371184014458, 0.36423382601295207, 0.327295748552356, 0.3129898807637884, 0.31416924021694137, 0.34560720660849575, 0.3431289930987623, 0.36693238390787253, 0.3297701512712844, 0.3421149415108956], [0.3657996283084355, 0.34074515779364445, 0.31087166629606544, 0.302104636226318, 0.2924799007388118, 0.3474806879746084, 0.33032502637606975, 0.35214585603130566, 0.3165878609923929, 0.30448241277588617], [0.3687250238373574, 0.3224693826701829, 0.3139124138427647, 0.2991118249091207, 0.28566522620497536, 0.3435362381784386, 0.3332818199094063, 0.35935492765227406, 0.30497779719350493, 0.30249800680268446], [0.3804568037362396, 0.3457689901302833, 0.33766933284607925, 0.30821122089086317, 0.30338137599279147, 0.35681237748942185, 0.34691313165762216, 0.3706730417265097, 0.3254047874753593, 0.322085828910064]]



methods={
        0:our_method_r2,
        1:combined_dataset_r2, 
        2:selected_best_r2,
        3:weighted_average_r2,
        4:model_average_r2,
        }

names={
        0:"Our Method",
        1:"Combined Dataset", 
        2:"Selecting Best",
        3:"Result Averaging",
        4:"Model Averaging",
        }


# import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


plt.style.use('ggplot')
plt.figure(figsize=(10,10))
plt.suptitle("R2 score comparison between different number of genes")
for counter in range(len(methods)):
    ax = plt.subplot(3, 2, counter + 1)
    main=ax.boxplot(methods[counter], patch_artist=True)
    m = np.array(methods[counter]).mean(axis=0)
    st = np.array(methods[counter]).std(axis=0)
    ax.set_title(names[counter])
    for i, line in enumerate(main['medians']):
        x, y = line.get_xydata()[1]
        text = ' μ={:.2f}\n σ={:.2f}'.format(m[i], st[i])
        ax.annotate(text, xy=(x, y))
    ax.set_xticks([1, 2,3,4, 5])
    ax.set_xticklabels(["50 genes","100 genes", "200 genes", "500 genes",'902 genes'], rotation=10)
    # ax.set_ylim(-20,10)

    colors=["forestgreen", "blue", "dimgray",  "slategray", "tomato"]
     
    for patch, color in zip(main['boxes'],colors):
        patch.set_facecolor(color)
plt.tight_layout()
plt.savefig('R2.png')
plt.show()

