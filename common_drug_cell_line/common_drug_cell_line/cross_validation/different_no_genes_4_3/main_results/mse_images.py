our_method_mse=[[0.01685441424319281, 0.01748988513027213, 0.01650102702971709, 0.015791359572343986, 0.01579902882046372, 0.01683885233961737, 0.019975524769742823, 0.01558009862265298, 0.0166147649474145, 0.01710419387825864], [0.016701245632840547, 0.01736326471526501, 0.016403772142775445, 0.01568901251546499, 0.01566388050929138, 0.016729489439031298, 0.019840258639983593, 0.015499276197908609, 0.016541802285447448, 0.01687781351184435], [0.016258294731482718, 0.01720201564398495, 0.01612734432568215, 0.01567466632067685, 0.015757524891089104, 0.016125495308643777, 0.019804977439546755, 0.015110732038099435, 0.016470749629852267, 0.016821387931666317], [0.016113021032448237, 0.017218622375291856, 0.015850675723755637, 0.015589009553318964, 0.015948931118039994, 0.016247866177766097, 0.01990726997793223, 0.015052029011962887, 0.016227237764830964, 0.016855837493651514], [0.016114503136833214, 0.017220142853837873, 0.0158504652298073, 0.015590094878150704, 0.01595141989276142, 0.016247596474154455, 0.01990974937660202, 0.015052036337376094, 0.01622700916266278, 0.01685823100679735]]



combined_dataset_mse=[[0.02271657940528768, 0.021167975533775543, 0.02247635991701177, 0.01994813796258102, 0.021537083640579355, 0.02087836273681427, 0.02577850759689773, 0.022227817726949727, 0.020886132305844844, 0.021784149841337662], [0.022718741559141113, 0.02102490682982284, 0.02250028355440854, 0.019927101084441422, 0.02176926394012115, 0.020925722979824365, 0.026016525311514736, 0.022383170429618952, 0.021176759586742196, 0.02171237126110202], [0.022923376797692248, 0.021374798199666523, 0.022822876735261316, 0.020021522609550122, 0.0222173684849429, 0.02045142954201062, 0.02605377884445633, 0.022683065995456376, 0.021404554222334886, 0.021952560745983528], [0.02475638089018988, 0.02292240927934431, 0.02380502824338928, 0.0213016848579779, 0.023961098143272054, 0.021559396869407044, 0.027701170016533844, 0.024042907668753565, 0.02244613105226809, 0.023530674723310975], [0.024914191425371754, 0.023140510117438295, 0.024747929214929285, 0.022422135845515372, 0.02485106371226314, 0.022745077261333922, 0.02897883026137863, 0.02570846311956942, 0.023053044580036923, 0.025092833264804514]]


selected_best_mse=[[0.03633743607779666, 0.03218291207455595, 0.033610055950580774, 0.028307817492107205, 0.03132763686013742, 0.03063207029477569, 0.04116965428897933, 0.03544629343397673, 0.03013002191806128, 0.03174373412125277], [0.03631976884373057, 0.031937990161352854, 0.03356143908767946, 0.028447709336032013, 0.031642144455628934, 0.0308965797565669, 0.04194197053970635, 0.035326400934206824, 0.030305790669297936, 0.03187087553800672], [0.03669245171659205, 0.032877466800004605, 0.03366946530472828, 0.029483486701000292, 0.03260140968715373, 0.03074569101219942, 0.04128377414228301, 0.0358720388483049, 0.030772606735022096, 0.03291604536274683], [0.036970330654888243, 0.0342061846075466, 0.03429089874626724, 0.029982750709230014, 0.033122726354140326, 0.030870373023935475, 0.04249935066609248, 0.035945284211982294, 0.031151233948471926, 0.03268955072831087], [0.03647582991631027, 0.032724101189636555, 0.03347518461929723, 0.02924417131189123, 0.032420135446542424, 0.0304695213015331, 0.04201926905951342, 0.03548386562135028, 0.03074162916664402, 0.03210671808535785]]



weighted_average_mse=[[0.02242828184085539, 0.020830723431829335, 0.02234144658521321, 0.019751104634057902, 0.021478919227437682, 0.020697807200367242, 0.025714525848739987, 0.022170417388858506, 0.020862578909503243, 0.021704188074933354], [0.02248491908395964, 0.02081061519706618, 0.02226829992644736, 0.019729308980812602, 0.021482350294376836, 0.020536325511467036, 0.025614668670054228, 0.022310869908373842, 0.020994183718781024, 0.021564798201671197], [0.022386166279056843, 0.02095406287814839, 0.022123087199935255, 0.019906703665632595, 0.02175354779835834, 0.019918673937616246, 0.025793884904575508, 0.02223059326525237, 0.020951572590604567, 0.021848444259431353], [0.022850145724691594, 0.0213709800799225, 0.02202732778294822, 0.020263806425538818, 0.022070636300433537, 0.020143903112568265, 0.026049893293755517, 0.02226617201946444, 0.02103508234503945, 0.022336887500652148], [0.02285466383764755, 0.021375497601479946, 0.022028827762953004, 0.020266974371129565, 0.02207337137304612, 0.020144157793510028, 0.02605365474951158, 0.02226875631365293, 0.02103690047085921, 0.022341383148270527]]


model_average_mse=[[0.02268272731383542, 0.021001371014922204, 0.022494789811835624, 0.01991582277632492, 0.02152621772164294, 0.020726359020626094, 0.0257862310957571, 0.022084841640464228, 0.020829108038269626, 0.021755477573247094], [0.022676630531141995, 0.02087065802960464, 0.02251002945802575, 0.0198824048095739, 0.02178334496201685, 0.020744792083297898, 0.02604124473430479, 0.022065586598506236, 0.021208660170012553, 0.02153727879058141], [0.023061037500063098, 0.021641733909439038, 0.02305961209350715, 0.020197429046168554, 0.022472241394716718, 0.020685401176484094, 0.026548850074611226, 0.022580971374252107, 0.021625798731235647, 0.022769260354081056], [0.02295466314425021, 0.02224168318078151, 0.022957862600021233, 0.020284042451795454, 0.022688688971698227, 0.02081044349316437, 0.026431629824027074, 0.022329699013916803, 0.02199318597626783, 0.02283422414088098], [0.022528067657607724, 0.02147681370609051, 0.022162908583533706, 0.02002070153531412, 0.022125988922565357, 0.020389578910827082, 0.025891224901971703, 0.021935205882553602, 0.02134679713517736, 0.022192974761246476]]



methods={
        0:our_method_mse,
        1:combined_dataset_mse, 
        2:selected_best_mse,
        3:weighted_average_mse,
        4:model_average_mse,
        }

names={
        0:"Our Method",
        1:"Combined Dataset", 
        2:"Selecting Best",
        3:"Result Averaging",
        4:"Model Averaging",
        }


# import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


plt.style.use('ggplot')
plt.figure(figsize=(10,10))
plt.suptitle("MSE score comparison between different number of genes")
for counter in range(len(methods)):
    ax = plt.subplot(3, 2, counter + 1)
    main=ax.boxplot(methods[counter], patch_artist=True)
    m = np.array(methods[counter]).mean(axis=0)
    st = np.array(methods[counter]).std(axis=0)
    ax.set_title(names[counter])
    for i, line in enumerate(main['medians']):
        x, y = line.get_xydata()[1]
        text = ' μ={:.2f}\n σ={:.2f}'.format(m[i], st[i])
        ax.annotate(text, xy=(x, y))
    ax.set_xticks([1, 2,3,4, 5])
    ax.set_xticklabels(["50 genes","100 genes", "200 genes", "500 genes",'902 genes'], rotation=10)
    # ax.set_ylim(-20,10)

    colors=["forestgreen", "blue", "dimgray",  "slategray", "tomato"]
     
    for patch, color in zip(main['boxes'],colors):
        patch.set_facecolor(color)
plt.tight_layout()
plt.savefig('Mse.png')
plt.show()

