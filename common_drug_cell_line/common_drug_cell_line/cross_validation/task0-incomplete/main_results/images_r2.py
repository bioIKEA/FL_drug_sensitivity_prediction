ccle_gdsc_our_method_r2=[0.5568359021584979, 0.47543655201645296, 0.5263144649634056, 0.4613049556266575, 0.4977826204493866, 0.48747087944158296, 0.4977913977002911, 0.5681530278429201, 0.48719882306433693, 0.4850427298744966]



ccle_gdsc_combined_dataset_r2=[0.3148361402941078, 0.2950891361161846, 0.2604169075632813, 0.22523284440217628, 0.21758463005029038, 0.2825083719718985, 0.2690305856410907, 0.26241727642989865, 0.27148445692666123, 0.23350576270143641]


ccle_gdsc_selected_best_r2=[-0.0031198678991564144, 0.003151861288342328, -0.0003940267330742042, -0.010493540010552804, -0.020721388948523378, 0.038841407628975366, -0.059904772524745464, -0.018041651345168663, 0.028512065313436863, 0.019257246429958297]


ccle_gdsc_weighted_average_r2=[0.3714750994753737, 0.34885530164476275, 0.34167629064284355, 0.2997015897914733, 0.3050379964074992, 0.3645541668442389, 0.34281595970624523, 0.36110339011902204, 0.33519805083016374, 0.31755249573798816]



ccle_gdsc_model_average_r2=[0.38045680373619506, 0.3457689901303539, 0.3376693328462176, 0.30821122089082276, 0.30338137599274784, 0.35681237748947825, 0.34691313165761195, 0.3706730417265012, 0.3254047874753371, 0.3220858289099985]



ccle_gcsi_our_method_r2=[0.6175983558832239, 0.6621376465169126, 0.6851573445582531, 0.6761952574254118, 0.6998530402892422, 0.7219228851922361, 0.6108082686306098, 0.6563013036350684, 0.6648413779717018, 0.6636549870846019]



ccle_gcsi_combined_dataset_r2=[0.10934072909333492, 0.6068371610011302, 0.35198564341877314, 0.5061045272088669, 0.5974422187304137, 0.6603432160020675, 0.4804344955762829, 0.4892786042285474, 0.2905345652377068, 0.6121670932181025]



ccle_gcsi_selected_best_r2=[0.506788499146118, 0.5609772589753921, 0.5935039830817601, 0.5911811300376533, 0.5367413677907242, 0.6493727127333591, 0.4716980744112167, 0.43787321865296747, 0.599118704708189, 0.5687895330197061]



ccle_gcsi_weighted_average_r2=[0.6149415530436368, 0.6590697441477562, 0.6530103502708511, 0.6739336911228209, 0.6711061079914302, 0.7197068207593142, 0.5934233424148401, 0.627399011095868, 0.6618066653744645, 0.6742024512177135]



ccle_gcsi_model_average_r2=[0.6346894908073828, 0.6591768964247399, 0.6704650352772429, 0.6759948367437667, 0.6628749130158111, 0.7138849966271861, 0.6153623615154808, 0.6353284296585378, 0.6788934493668557, 0.6783502998214629]



gdsc_gcsi_our_method_r2=[0.4608302366833149, 0.5017570727549125, 0.5180992058195155, 0.5040095542391395, 0.4907520939564234, 0.5388418079758361, 0.49928241731972156, 0.5060508499206946, 0.47714366538439446, 0.536828823299962]



gdsc_gcsi_combined_dataset_r2=[0.3136511771433944, 0.37934080627417865, 0.3114486206787199, 0.2952132278600116, 0.29830612487731645, 0.34734031092374074, 0.3175770804439313, 0.3531993083326399, 0.2436804496162256, 0.35728725763449265]


gdsc_gcsi_selected_best_r2=[0.1795215520671839, 0.20495153842679348, 0.11277866449912588, 0.0681259218563679, 0.12537392320616292, 0.08027792600455319, 0.09124650427149539, 0.1907419740164732, 0.023710242241330226, 0.19677999624583964]


gdsc_gcsi_weighted_average_r2=[0.35942710484905194, 0.3929233996413103, 0.34937440395791564, 0.3343050508765839, 0.31717914575066597, 0.37736756193695287, 0.35082992182687023, 0.37083151743001186, 0.2859565792770191, 0.3882520218068277]


gdsc_gcsi_model_average_r2=[0.3554635250264774, 0.40298712200485143, 0.33948813076008133, 0.3343566223069454, 0.32228370958969266, 0.37117627234266504, 0.3419633452996844, 0.3714174696339486, 0.27748115603359025, 0.38044433317619075]


our_method_r2=[]
combined_dataset_r2=[]
selected_best_r2=[]
weighted_average_r2=[]
model_average_r2=[]


our_method_r2.append(ccle_gdsc_our_method_r2)
our_method_r2.append(ccle_gcsi_our_method_r2)
our_method_r2.append(gdsc_gcsi_our_method_r2)


combined_dataset_r2.append(ccle_gdsc_combined_dataset_r2)
combined_dataset_r2.append(ccle_gcsi_combined_dataset_r2)
combined_dataset_r2.append(gdsc_gcsi_combined_dataset_r2)

selected_best_r2.append(ccle_gdsc_selected_best_r2)
selected_best_r2.append(ccle_gcsi_selected_best_r2)
selected_best_r2.append(gdsc_gcsi_selected_best_r2)


weighted_average_r2.append(ccle_gdsc_weighted_average_r2)
weighted_average_r2.append(ccle_gcsi_weighted_average_r2)
weighted_average_r2.append(gdsc_gcsi_weighted_average_r2)


model_average_r2.append(ccle_gdsc_model_average_r2)
model_average_r2.append(ccle_gcsi_model_average_r2)
model_average_r2.append(gdsc_gcsi_model_average_r2)


methods={
        0:our_method_r2,
        1:combined_dataset_r2, 
        2:selected_best_r2,
        3:weighted_average_r2,
        4:model_average_r2,
        }

names={
        0:"Our Method",
        1:"Combined Dataset", 
        2:"Selecting Best",
        3:"Result Averaging",
        4:"Model Averaging",
        }


# import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


plt.style.use('ggplot')
plt.figure(figsize=(10,10))
plt.suptitle("R2 score comparison between different number of dataset")
for counter in range(len(methods)):
    ax = plt.subplot(3, 2, counter + 1)
    main=ax.boxplot(methods[counter], patch_artist=True)
    m = np.array(methods[counter]).mean(axis=0)
    st = np.array(methods[counter]).std(axis=0)
    ax.set_title(names[counter])
    for i, line in enumerate(main['medians']):
        x, y = line.get_xydata()[1]
        text = ' μ={:.2f}\n σ={:.2f}'.format(m[i], st[i])
        ax.annotate(text, xy=(x, y))
    ax.set_xticks([1, 2,3])
    ax.set_xticklabels(["CCLE-GDSC","CCLE-gCSI", "GDSC-gCSI"], rotation=10)
    # ax.set_ylim(-20,10)

    colors=["forestgreen", "blue", "dimgray"]
     
    for patch, color in zip(main['boxes'],colors):
        patch.set_facecolor(color)
plt.tight_layout()
plt.suptitle("R2 score comparison between different number of dataset")
plt.savefig('R2.png')
plt.show()

